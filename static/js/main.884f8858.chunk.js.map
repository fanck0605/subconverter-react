{"version":3,"sources":["subconverter/options.ts","subconverter/useBackendList.ts","subconverter/useRuleList.ts","subconverter/subscription.ts","subconverter/Subconverter.tsx","App.tsx","reportWebVitals.ts","index.tsx","subconverter/Subconverter.module.less","App.module.less"],"names":["targetTypes","clash","clashr","quan","quanx","loon","ss","sssub","ssd","ssr","surfboard","v2ray","fetchRuleList","a","fetch","response","json","fetchBackendList","useBackendList","useState","backendList","setBackendList","useEffect","ignore","localSubconverter","value","window","location","origin","then","newBackendList","concat","useRuleList","ruleList","setRuleList","newRuleList","loadSubscriptionUrl","subscriptionUrl","url","URL","searchParams","config","backendUrl","pathname","targetType","get","hasOwnProperty","version","getValidTargetType","sourceUrls","replaceAll","ruleUrl","filename","enableUdp","formItemLayout","labelCol","xs","span","sm","md","wrapperCol","tailFormItemLayout","matchesOptionData","inputValue","option","label","toUpperCase","indexOf","renderTargetTypeOption","key","targetName","Option","stayTuned","message","warning","Subconverter","props","console","debug","useForm","configForm","resultForm","getFieldValue","setFieldsValue","initialConfig","useMemo","generateSubscriptionUrl","useCallback","validateFields","encodedSourceUrls","encodeURIComponent","split","map","trim","filter","join","encodedRuleUrl","dumpSubscriptionUrl","catch","error","handleSubscriptionUrlChange","event","target","subscriptionConfig","e","title","extra","href","className","styles","githubHref","GithubOutlined","form","initialValues","Item","name","rules","required","TextArea","placeholder","rows","allowClear","Object","entries","options","filterOption","ApiOutlined","onChange","tailButtonContainer","tailButton","type","onClick","App","container","card","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.884f8858.chunk.js","sourcesContent":["const targetTypes = {\n  clash: 'Clash',\n  clashr: 'ClashR',\n  quan: 'Quantumult',\n  quanx: 'QuantumultX',\n  loon: 'Loon',\n  ss: 'SS (SIP002)',\n  sssub: 'SS Android',\n  ssd: 'SSD',\n  ssr: 'SSR',\n  surfboard: 'Surfboard',\n  'surge&ver=2': 'Surge2',\n  'surge&ver=3': 'Surge3',\n  'surge&ver=4': 'Surge4',\n  v2ray: 'V2Ray'\n};\n\ninterface OptionData {\n  label?: string;\n  value: string;\n}\n\nconst fetchRuleList = async () => {\n  const response = await fetch('/rule-list.json');\n  return (await response.json()) as OptionData[];\n};\n\nconst fetchBackendList = async () => {\n  const response = await fetch('/backend.json');\n  return (await response.json()) as OptionData[];\n};\n\nexport type { OptionData };\nexport { targetTypes, fetchRuleList, fetchBackendList };\n","import { useEffect, useState } from 'react';\nimport { fetchBackendList, OptionData } from './options';\n\nconst useBackendList = () => {\n  const [backendList, setBackendList] = useState<OptionData[]>([]);\n  useEffect(() => {\n    let ignore = false;\n\n    const localSubconverter = [\n      {\n        value: window.location.origin + '/sub'\n      }\n    ];\n    setBackendList(localSubconverter);\n\n    fetchBackendList().then((newBackendList) => {\n      if (ignore) return;\n      setBackendList(localSubconverter.concat(newBackendList));\n    });\n\n    return () => {\n      ignore = true;\n    };\n  }, []);\n  return backendList;\n};\n\nexport default useBackendList;\n","import { useEffect, useState } from 'react';\nimport { fetchRuleList, OptionData } from './options';\n\nconst useRuleList = () => {\n  const [ruleList, setRuleList] = useState<OptionData[]>([]);\n  useEffect(() => {\n    let ignore = false;\n\n    fetchRuleList().then((newRuleList) => {\n      if (ignore) return;\n      setRuleList(newRuleList);\n    });\n\n    return () => {\n      ignore = true;\n    };\n  }, []);\n  return ruleList;\n};\n\nexport default useRuleList;\n","import { targetTypes } from './options';\n\nconst getValidTargetType = (searchParams: URLSearchParams) => {\n  let targetType = searchParams.get('target');\n  if (!targetType) return null;\n\n  if (!targetTypes.hasOwnProperty(targetType)) {\n    const version = searchParams.get('ver');\n    if (!version) return null;\n\n    targetType = `${targetType}&ver=${version}`;\n    if (!targetTypes.hasOwnProperty(targetType)) return null;\n  }\n\n  return targetType;\n};\n\ninterface SubscriptionConfig {\n  backendUrl: string;\n  targetType: string;\n  sourceUrls: string;\n  ruleUrl: string;\n  filename?: string;\n  enableUdp?: string;\n}\n\ntype SelectiveSubscriptionConfig = {\n  [K in keyof SubscriptionConfig]?: SubscriptionConfig[K];\n};\n\nconst dumpSubscriptionUrl = ({\n  backendUrl,\n  targetType,\n  sourceUrls,\n  ruleUrl,\n  filename,\n  enableUdp\n}: SubscriptionConfig) => {\n  const encodedSourceUrls = encodeURIComponent(\n    sourceUrls\n      .split(/[\\n|]/)\n      .map((url) => url.trim())\n      .filter((url) => url)\n      .join('|')\n  );\n  const encodedRuleUrl = encodeURIComponent(ruleUrl);\n\n  let subscriptionUrl = `${backendUrl}?target=${targetType}&url=${encodedSourceUrls}&config=${encodedRuleUrl}`;\n\n  if (filename) subscriptionUrl += `&filename=${filename}`;\n  if (enableUdp) subscriptionUrl += `&udp=${enableUdp}`;\n\n  return subscriptionUrl;\n};\n\nconst loadSubscriptionUrl = (subscriptionUrl: string) => {\n  const url = new URL(subscriptionUrl);\n  const searchParams = url.searchParams;\n\n  const config: SelectiveSubscriptionConfig = {\n    backendUrl: `${url.origin}${url.pathname}`\n  };\n\n  const targetType = getValidTargetType(searchParams);\n  if (targetType) config.targetType = targetType;\n\n  const sourceUrls = searchParams.get('url')?.replaceAll('|', '\\n');\n  if (sourceUrls) config.sourceUrls = sourceUrls;\n\n  const ruleUrl = searchParams.get('config');\n  if (ruleUrl) config.ruleUrl = ruleUrl;\n\n  const filename = searchParams.get('filename');\n  if (filename) config.filename = filename;\n\n  const enableUdp = searchParams.get('udp');\n  if (enableUdp === 'true' || enableUdp === 'false')\n    config.enableUdp = enableUdp;\n\n  return config;\n};\n\nexport type { SubscriptionConfig, SelectiveSubscriptionConfig };\nexport { dumpSubscriptionUrl, loadSubscriptionUrl };\n","import {\n  AutoComplete,\n  AutoCompleteProps,\n  Button,\n  Card,\n  CardProps,\n  Divider,\n  Form,\n  FormProps,\n  Input,\n  message,\n  Select\n} from 'antd';\nimport React, { ChangeEvent, useCallback, useEffect, useMemo } from 'react';\nimport useBackendList from './useBackendList';\nimport useRuleList from './useRuleList';\nimport {\n  dumpSubscriptionUrl,\n  loadSubscriptionUrl,\n  SelectiveSubscriptionConfig,\n  SubscriptionConfig\n} from './subscription';\nimport { targetTypes } from './options';\nimport { ApiOutlined, GithubOutlined } from '@ant-design/icons';\nimport styles from './Subconverter.module.less';\n\ntype FormLayoutProps = {\n  labelCol?: FormProps['labelCol'];\n  wrapperCol?: FormProps['wrapperCol'];\n};\n\nconst formItemLayout: FormLayoutProps = {\n  labelCol: {\n    xs: { span: 5 },\n    sm: { span: 5 },\n    md: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 17 },\n    sm: { span: 17 },\n    md: { span: 18 }\n  }\n};\n\nconst tailFormItemLayout: FormLayoutProps = {\n  wrapperCol: { span: 24 }\n};\n\nconst matchesOptionData: AutoCompleteProps['filterOption'] = (\n  inputValue,\n  option\n) =>\n  option\n    ? option.label\n      ? (option.label as string)\n          .toUpperCase()\n          .indexOf(inputValue.toUpperCase()) !== -1\n      : option.value.indexOf(inputValue) !== -1\n    : false;\n\nconst renderTargetTypeOption = (\n  [targetType, targetName]: [string, string],\n  key: number\n) => (\n  <Select.Option value={targetType} key={key}>\n    {targetName}\n  </Select.Option>\n);\n\nconst stayTuned = () => {\n  message.warning('敬请期待');\n};\n\nconst Subconverter: React.FC<CardProps> = (props) => {\n  console.debug('Subconverter render');\n\n  const [configForm] = Form.useForm();\n  const [resultForm] = Form.useForm();\n\n  const backendList = useBackendList();\n  const ruleList = useRuleList();\n\n  useEffect(() => {\n    if (backendList[0] && !configForm.getFieldValue('backendUrl')) {\n      configForm.setFieldsValue({ backendUrl: backendList[0].value });\n    }\n  }, [configForm, backendList]);\n\n  useEffect(() => {\n    if (ruleList[0] && !configForm.getFieldValue('ruleUrl')) {\n      configForm.setFieldsValue({ ruleUrl: ruleList[0].value });\n    }\n  }, [configForm, ruleList]);\n\n  const initialConfig = useMemo(() => {\n    const config: SelectiveSubscriptionConfig = { targetType: 'clash' };\n\n    const backendUrl = backendList[0]?.value;\n    if (backendUrl) config.backendUrl = backendUrl;\n    const ruleUrl = ruleList[0]?.value;\n    if (ruleUrl) config.ruleUrl = ruleUrl;\n\n    return config;\n  }, [backendList, ruleList]);\n\n  const generateSubscriptionUrl = useCallback(() => {\n    configForm\n      .validateFields()\n      .then((config: SubscriptionConfig) => {\n        const subscriptionUrl = dumpSubscriptionUrl(config);\n        resultForm.setFieldsValue({ subscriptionUrl });\n      })\n      .catch(() => console.error('订阅链接生成错误！'));\n  }, [configForm, resultForm]);\n\n  const handleSubscriptionUrlChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const { value: subscriptionUrl } = event.target;\n      try {\n        const subscriptionConfig = loadSubscriptionUrl(subscriptionUrl);\n        configForm.setFieldsValue(subscriptionConfig);\n      } catch (e) {\n        console.error('错误的订阅链接！');\n      }\n    },\n    [configForm]\n  );\n\n  return (\n    <Card\n      {...props}\n      title=\"Subscription Converter\"\n      extra={\n        <a\n          href=\"https://github.com/fanck0605/subconverter-react\"\n          className={styles.githubHref}\n        >\n          <GithubOutlined />\n        </a>\n      }\n    >\n      <Form {...formItemLayout} form={configForm} initialValues={initialConfig}>\n        <Form.Item\n          label=\"订阅链接\"\n          name=\"sourceUrls\"\n          rules={[{ required: true, message: '订阅链接不可为空' }]}\n        >\n          <Input.TextArea\n            placeholder=\"请输入订阅链接地址\"\n            rows={3}\n            allowClear\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"目标类型\"\n          name=\"targetType\"\n          rules={[{ required: true, message: '目标类型不可为空' }]}\n        >\n          <Select>\n            {Object.entries(targetTypes).map(renderTargetTypeOption)}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"后端地址\"\n          name=\"backendUrl\"\n          rules={[{ required: true, message: '后端地址不可为空' }]}\n        >\n          <AutoComplete\n            placeholder=\"请输入后端服务器地址\"\n            options={backendList}\n            allowClear\n            filterOption={matchesOptionData}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"规则地址\"\n          name=\"ruleUrl\"\n          rules={[{ required: true, message: '规则地址不可为空' }]}\n        >\n          <AutoComplete\n            placeholder=\"请输入远程规则地址\"\n            options={ruleList}\n            allowClear\n            filterOption={matchesOptionData}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"文件名称\" name=\"filename\">\n          <Input placeholder=\"请输入文件名称\" allowClear />\n        </Form.Item>\n\n        <Form.Item label=\"启用 UDP\" name=\"enableUdp\">\n          <Select placeholder=\"请选择是否启用 UDP\" allowClear>\n            <Select.Option value=\"true\">开启</Select.Option>\n            <Select.Option value=\"false\">关闭</Select.Option>\n          </Select>\n        </Form.Item>\n      </Form>\n\n      <Divider>\n        <ApiOutlined />\n      </Divider>\n\n      <Form {...formItemLayout} form={resultForm}>\n        <Form.Item label=\"订阅链接\" name=\"subscriptionUrl\">\n          <Input onChange={handleSubscriptionUrlChange} />\n        </Form.Item>\n        <Form.Item label=\"订阅短链\" name=\"shortSubscriptionUrl\">\n          <Input />\n        </Form.Item>\n      </Form>\n\n      <Form {...tailFormItemLayout}>\n        <Form.Item>\n          <div className={styles.tailButtonContainer}>\n            <Button\n              className={styles.tailButton}\n              type=\"primary\"\n              onClick={generateSubscriptionUrl}\n            >\n              生成链接\n            </Button>\n            <Button\n              className={styles.tailButton}\n              type=\"primary\"\n              onClick={stayTuned}\n            >\n              生成短链\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Subconverter;\n","import React from 'react';\nimport Subconverter from './subconverter/Subconverter';\nimport styles from './App.module.less';\n\nconst App: React.FC = () => (\n  <div className={styles.container}>\n    <Subconverter className={styles.card} />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tailButtonContainer\":\"Subconverter_tailButtonContainer__3Y-7m\",\"tailButton\":\"Subconverter_tailButton__2SN0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2ey_y\",\"card\":\"App_card__2aWZs\"};"],"sourceRoot":""}